class WordCounter {
    Map<String,Integer> countWords(String text) {
        Map<String,Integer> freq = new HashMap<>();
        String normalized = text.toLowerCase().replaceAll("[^a-z0-9\\s]", " ");
        String[] words = normalized.split("\\s+");

        for (String w : words) {
            if (w.length() == 0) continue;
            freq.put(w, freq.getOrDefault(w, 0) + 1);
        }
        return freq;
    }

    List<Map.Entry<String,Integer>> sortByFrequencyDesc(Map<String,Integer> freq) {
        List<Map.Entry<String,Integer>> list = new ArrayList<>(freq.entrySet());
        // sort by value desc, then key asc
        list.sort((a,b) -> {
            int cmp = Integer.compare(b.getValue(), a.getValue());
            if (cmp != 0) return cmp;
            return a.getKey().compareTo(b.getKey());
        });
        return list;
    }

    void printTop(Map<String,Integer> freq) {
        for (Map.Entry<String,Integer> e : sortByFrequencyDesc(freq)) {
            print(e.getKey() + " : " + e.getValue());
        }
    }
}

class WordCounterDemo {
    static void run() {
        String para = "The news today is about the rise in technology trends.";
        WordCounter wc = new WordCounter();
        Map<String,Integer> freq = wc.countWords(para);
        wc.printTop(freq);
    }
}
